\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{private}\PYG{+w}{ }\PYG{n+nx}{dfs}\PYG{p}{(}\PYG{n+nx}{node}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{string}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{visited}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{Set}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{o}{\PYGZgt{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{  }\PYG{n+nx}{visited}\PYG{p}{.}\PYG{n+nx}{add}\PYG{p}{(}\PYG{n+nx}{node}\PYG{p}{)}

\PYG{+w}{  }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{neighbors}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{adj}\PYG{p}{.}\PYG{n+nx}{get}\PYG{p}{(}\PYG{n+nx}{node}\PYG{p}{)}\PYG{o}{!}
\PYG{+w}{  }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{neighbor}\PYG{+w}{ }\PYG{k}{of}\PYG{+w}{ }\PYG{n+nx}{neighbors}\PYG{p}{.}\PYG{n+nx}{keys}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n+nx}{visited}\PYG{p}{.}\PYG{n+nx}{has}\PYG{p}{(}\PYG{n+nx}{neighbor}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{      }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{dfs}\PYG{p}{(}\PYG{n+nx}{neighbor}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{visited}\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{// рекурсивно обойти соседние узлы}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
