\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/**}
\PYG{c+cm}{ * Метод, возвращающий для данной вершины кратчайшие пути до других}
\PYG{c+cm}{ * вершин. При этом в графе могут присутствовать отрицательные веса,}
\PYG{c+cm}{ * но не может быть отрицательных циклов. В графе могут быть отрицательные}
\PYG{c+cm}{ * веса, но не может быть отрицательных циклов. Реализация построена}
\PYG{c+cm}{ * на основе алгоритма Беллмана\PYGZhy{}Форда.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * @param sourceVertex вершина, от которой искать кратчайшие пути}
\PYG{c+cm}{ */}
\PYG{n+nx}{taskNine}\PYG{p}{(}\PYG{n+nx}{sourceVertex}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{string}\PYG{p}{)}\PYG{o}{:}\PYG{+w}{ }\PYG{n+nb}{Map}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n+nx}{distance}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{number}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{path}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{string}\PYG{p}{[]}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{  }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{exists}\PYG{p}{(}\PYG{n+nx}{sourceVertex}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{throw}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nx}{NodeNotExists}\PYG{p}{(}\PYG{n+nx}{sourceVertex}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}

\PYG{+w}{  }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{paths}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{Map}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n+nx}{distance}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{number}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{path}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{string}\PYG{p}{[]}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nb}{Map}\PYG{p}{()}

\PYG{+w}{  }\PYG{c+c1}{// инициализировать расстояния до всех вершин бесконечностью, кроме начальной вершины}
\PYG{+w}{  }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{vertex}\PYG{+w}{ }\PYG{k}{of}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{adj}\PYG{p}{.}\PYG{n+nx}{keys}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{set}\PYG{p}{(}\PYG{n+nx}{vertex}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{      }\PYG{n+nx}{distance}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{Infinity}\PYG{p}{,}
\PYG{+w}{      }\PYG{n+nx}{path}\PYG{o}{:}\PYG{+w}{ }\PYG{p}{[]}
\PYG{+w}{    }\PYG{p}{\PYGZcb{})}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}
\PYG{+w}{  }\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{set}\PYG{p}{(}\PYG{n+nx}{sourceVertex}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{n+nx}{distance}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{path}\PYG{o}{:}\PYG{+w}{ }\PYG{p}{[]\PYGZcb{})}

\PYG{+w}{  }\PYG{c+c1}{// релаксация ребер}
\PYG{+w}{  }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{let}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mf}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{adj}\PYG{p}{.}\PYG{n+nx}{size}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mf}{1}\PYG{p}{;}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{o}{++}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{const}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nx}{u}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{neighbors}\PYG{p}{]}\PYG{+w}{ }\PYG{k}{of}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{adj}\PYG{p}{.}\PYG{n+nx}{entries}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{      }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{const}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nx}{v}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{p}{]}\PYG{+w}{ }\PYG{k}{of}\PYG{+w}{ }\PYG{n+nx}{neighbors}\PYG{p}{.}\PYG{n+nx}{entries}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{uDist}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{get}\PYG{p}{(}\PYG{n+nx}{u}\PYG{p}{)}\PYG{o}{!}\PYG{p}{.}\PYG{n+nx}{distance}
\PYG{+w}{        }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{vDist}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{get}\PYG{p}{(}\PYG{n+nx}{v}\PYG{p}{)}\PYG{o}{!}\PYG{p}{.}\PYG{n+nx}{distance}

\PYG{+w}{        }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{uDist}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n+nx}{vDist}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{  }\PYG{c+c1}{// если d(u) + w \PYGZlt{} d(v)}
\PYG{+w}{          }\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{set}\PYG{p}{(}\PYG{n+nx}{v}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n+nx}{distance}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{uDist}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{p}{,}
\PYG{+w}{            }\PYG{n+nx}{path}\PYG{o}{:}\PYG{+w}{ }\PYG{p}{[...}\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{get}\PYG{p}{(}\PYG{n+nx}{u}\PYG{p}{)}\PYG{o}{!}\PYG{p}{.}\PYG{n+nx}{path}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{u}\PYG{p}{]}
\PYG{+w}{          }\PYG{p}{\PYGZcb{})}\PYG{+w}{  }\PYG{c+c1}{// то d(v) \PYGZlt{}\PYGZhy{} d(u) + w}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{      }\PYG{p}{\PYGZcb{}}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}

\PYG{+w}{  }\PYG{c+c1}{// проверка на отрицательные циклы}
\PYG{+w}{  }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{const}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nx}{u}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{neighbors}\PYG{p}{]}\PYG{+w}{ }\PYG{k}{of}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{adj}\PYG{p}{.}\PYG{n+nx}{entries}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{const}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nx}{v}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{p}{]}\PYG{+w}{ }\PYG{k}{of}\PYG{+w}{ }\PYG{n+nx}{neighbors}\PYG{p}{.}\PYG{n+nx}{entries}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{      }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{uDist}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{get}\PYG{p}{(}\PYG{n+nx}{u}\PYG{p}{)}\PYG{o}{!}\PYG{p}{.}\PYG{n+nx}{distance}
\PYG{+w}{      }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{vDist}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{get}\PYG{p}{(}\PYG{n+nx}{v}\PYG{p}{)}\PYG{o}{!}\PYG{p}{.}\PYG{n+nx}{distance}

\PYG{+w}{      }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{uDist}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n+nx}{vDist}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k}{throw}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nx}{GraphHasNegativeLoops}\PYG{p}{()}
\PYG{+w}{      }\PYG{p}{\PYGZcb{}}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}

\PYG{+w}{  }\PYG{k}{return}\PYG{+w}{ }\PYG{n+nx}{paths}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
