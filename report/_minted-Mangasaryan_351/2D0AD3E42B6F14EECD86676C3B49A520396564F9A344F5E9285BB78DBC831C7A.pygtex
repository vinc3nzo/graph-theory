\begin{Verbatim}[commandchars=\\\{\}]
\PYG{n+nx}{mst}\PYG{p}{()}\PYG{o}{:}\PYG{+w}{ }\PYG{n+nx}{Graph}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{  }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{weighted}\PYG{+w}{ }\PYG{o}{||}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{oriented}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{throw}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nx}{GraphNotWeightedUnoriented}\PYG{p}{()}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}

\PYG{+w}{  }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{mst}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nx}{Graph}\PYG{p}{(}\PYG{k+kc}{true}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kc}{false}\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{// минимальное остовное дерево}
\PYG{+w}{  }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{visited}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nb}{Set}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{o}{\PYGZgt{}}\PYG{p}{()}\PYG{+w}{ }\PYG{c+c1}{// множество посещенных вершин}

\PYG{+w}{  }\PYG{c+c1}{// взять любую вершину как начальную (здесь первая)}
\PYG{+w}{  }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{startVertex}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{adj}\PYG{p}{.}\PYG{n+nx}{keys}\PYG{p}{().}\PYG{n+nx}{next}\PYG{p}{().}\PYG{n+nx}{value}
\PYG{+w}{  }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n+nx}{startVertex}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{throw}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nx}{GraphIsEmpty}\PYG{p}{()}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}
\PYG{+w}{  }\PYG{n+nx}{visited}\PYG{p}{.}\PYG{n+nx}{add}\PYG{p}{(}\PYG{n+nx}{startVertex}\PYG{p}{)}
\PYG{+w}{  }\PYG{n+nx}{mst}\PYG{p}{.}\PYG{n+nx}{addNode}\PYG{p}{(}\PYG{n+nx}{startVertex}\PYG{p}{)}

\PYG{+w}{  }\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{visited}\PYG{p}{.}\PYG{n+nx}{size}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{adj}\PYG{p}{.}\PYG{n+nx}{size}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{// пока не посетим все вершины}
\PYG{+w}{    }\PYG{c+c1}{// ребра, которые соединяют посещенные вершины с непосещенными}
\PYG{+w}{    }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{edges}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{Array}\PYG{o}{\PYGZlt{}}\PYG{n+nx}{Edge}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{[]}

\PYG{+w}{    }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{vertex}\PYG{+w}{ }\PYG{k}{of}\PYG{+w}{ }\PYG{n+nx}{visited}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{// найти такие ребра}
\PYG{+w}{      }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{const}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nx}{neighbor}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{p}{]}\PYG{+w}{ }\PYG{k}{of}\PYG{+w}{ }\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{adj}\PYG{p}{.}\PYG{n+nx}{get}\PYG{p}{(}\PYG{n+nx}{vertex}\PYG{p}{)}\PYG{o}{!}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n+nx}{visited}\PYG{p}{.}\PYG{n+nx}{has}\PYG{p}{(}\PYG{n+nx}{neighbor}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{          }\PYG{n+nx}{edges}\PYG{p}{.}\PYG{n+nx}{push}\PYG{p}{(\PYGZob{}}\PYG{n+nx}{from}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{vertex}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{to}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kt}{neighbor}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{p}{\PYGZcb{});}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{      }\PYG{p}{\PYGZcb{}}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{edges}\PYG{p}{.}\PYG{n+nx}{length}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+m+mf}{0}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{      }\PYG{c+c1}{// Не все вершины еще посещены, но мы не смогли найти новые ребра.}
\PYG{+w}{      }\PYG{c+c1}{// Это значит, что граф несвязный.}
\PYG{+w}{      }\PYG{k}{throw}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nx}{GraphIsNotConnected}\PYG{p}{()}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{c+c1}{// выбрать ребро с наименьшим весом}
\PYG{+w}{    }\PYG{n+nx}{edges}\PYG{p}{.}\PYG{n+nx}{sort}\PYG{p}{((}\PYG{n+nx}{a}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{b}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{=\PYGZgt{}}\PYG{+w}{ }\PYG{n+nx}{a}\PYG{p}{.}\PYG{n+nx}{weight}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{n+nx}{b}\PYG{p}{.}\PYG{n+nx}{weight}\PYG{p}{)}
\PYG{+w}{    }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{k+kr}{from}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{to}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{edges}\PYG{p}{[}\PYG{l+m+mf}{0}\PYG{p}{]}

\PYG{+w}{    }\PYG{c+c1}{// добавить ребро в минимальное остовное дерево}
\PYG{+w}{    }\PYG{n+nx}{mst}\PYG{p}{.}\PYG{n+nx}{addNode}\PYG{p}{(}\PYG{n+nx}{to}\PYG{p}{)}
\PYG{+w}{    }\PYG{n+nx}{mst}\PYG{p}{.}\PYG{n+nx}{connect}\PYG{p}{(}\PYG{k+kr}{from}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{to}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{weight}\PYG{p}{)}
\PYG{+w}{    }\PYG{n+nx}{visited}\PYG{p}{.}\PYG{n+nx}{add}\PYG{p}{(}\PYG{n+nx}{to}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}

\PYG{+w}{  }\PYG{k}{return}\PYG{+w}{ }\PYG{n+nx}{mst}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
